name: Deploy to prod & Code Release
# When we manually trigger this job, we want to create code artifacts (changelog, tag, release, etc) and deploy the prod environment on the server
# [ghub] Create changelog
# [ghub] Create new tag
# [ghub] Create release
# [ghub] Push to main
# [ghub] For every service:
# [ghub]  Create image with 'prd' env
# [ghub]  Send image to DHub
# [ghub] Ping server
# [vps] Pull images
# [vps] Backup database prd
# [vps] Deploy 'prd' environment

on:
  workflow_dispatch:

concurrency:
  group: prod-deploy
  cancel-in-progress: false

permissions:
  contents: write # can write on the repository

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # To get commit messages

      - name: Set release tag
        id: tag
        run: |
          TAG=$(date +'%Y.%m.%d-%H%M')
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Generate changelog
        run:
          | # TODO: remplacer par ton outil préféré (release-please, git-chglog, etc.)
          echo "## Changelog ${{ steps.tag.outputs.tag }}" > CHANGELOG.md
          git log $(git describe --tags --abbrev=0)..HEAD --oneline >> CHANGELOG.md

      - name: Commit changelog and push to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git merge origin/staging --no-ff -m "Merge staging into main for release ${{ steps.tag.outputs.tag }}"
          git add CHANGELOG.md
          git commit -m "chore: update changelog for release ${{ steps.tag.outputs.tag }}"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push origin main

      - name: Create GitHub tag
        run: |
          git tag ${{ steps.tag.outputs.tag }}
          git push origin ${{ steps.tag.outputs.tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # build-and-push:
  #   needs: prepare-release
  #   runs-on: ubuntu-latest
  #   environment: production
  #   strategy:
  #     matrix:
  #       service:
  #         - frontend
  #         - backend
  #         - files
  #         - realtime

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build and push prod image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: ./${{ matrix.service }}
  #         file: ./${{ matrix.service }}/Dockerfile.prd
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}-${{ matrix.service }}:${{ needs.prepare-release.outputs.tag }}
  #           ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}-${{ matrix.service }}:latest

  # notify-server:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   environment: production
  #   steps:
  #     - name: Notify production server
  #       run: |
  #         curl -f -X POST ${{ secrets.SERVER_DOMAIN }}/hooks/prod-${{ secrets.APP_NAME }}
