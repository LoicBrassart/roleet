name: Deploy to prod & Code Release
# [ghub] Create changelog
# [ghub] Create new tag
# [ghub] Create release
# [ghub] Push to main
# [vps] Backup database
# [vps] Deploy to prod

on:
  workflow_dispatch:

jobs:
  notify-server:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Notify server
        run: |
          curl -X POST ${{ secrets.SERVER_DOMAIN }}/hooks/dockerhub-${{ secrets.APP_NAME }}

  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: staging

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Get latest version tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 --match 'v*' || echo "v0.0.0")
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      - name: Create new tag
        run: |
          LATEST_TAG=${{ env.LATEST_TAG }}
          echo "Last tag: $LATEST_TAG"

          VERSION=$(echo $LATEST_TAG | sed 's/^v//')
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "New tag: $NEW_TAG"

          git tag -a $NEW_TAG -m "Release $NEW_TAG"
          git push origin $NEW_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Changelog
        run: |
          git fetch --tags
          git log ${{ env.LATEST_TAG }}..HEAD --pretty=format:"* %s" > CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md for ${{ env.LATEST_TAG }}"
          git push origin staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update main branch
        run: |
          git checkout main
          git merge --no-ff staging
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Release
      #   uses: actions/create-release@v1
      #   with:
      #     tag_name: ${{ env.NEW_TAG }}
      #     release_name: "Release ${{ env.NEW_TAG }}"
      #     body_path: ./CHANGELOG.md
      #     draft: false
      #     prerelease: false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
