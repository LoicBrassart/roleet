name: Run all tests
# When PR is created to `staging`, we want to automatically run *all* tests: unit, integration and e2e
# [ghub] For every service:
# [ghub]  Run `npm run test` in it
# [ghub] Deploy 'e2e' environment & run e2e tests on it

on:
  pull_request:
    branches:
      - staging

jobs:
  test-services:
    runs-on: ubuntu-latest
    environment: e2e
    strategy:
      fail-fast: false
      matrix:
        # Add services here
        service:
          - frontend
          - backend
          - files
          - realtime

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            frontend/package-lock.json
            backend/package-lock.json
            files/package-lock.json
            realtime/package-lock.json

      - name: Run tests for ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: |
          npm ci
          npm run test

  test-e2e:
    runs-on: ubuntu-latest
    needs: test-services
    environment: e2e
    env:
      GATEWAY_PORT: ${{ secrets.GATEWAY_PORT }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_HOST: ${{ secrets.DB_HOST }}
      COOKIE_TTL: ${{ secrets.COOKIE_TTL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      VITE_API_URL: ${{ secrets.VITE_API_URL}}
      VITE_WS_URL: ${{ secrets.VITE_WS_URL}}
      CACHE_PORT: ${{ secrets.CACHE_PORT}}
      CACHE_HOST: ${{ secrets.CACHE_HOST}}
      REALTIME_HOST: ${{ secrets.REALTIME_HOST}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and Run E2E Tests
        run: |
          docker compose -f compose.e2e.yaml run playwright-e2e

      - name: Teardown E2E environment
        if: always() # Even if tests fail
        run: docker compose -f compose.e2e.yaml down -v
